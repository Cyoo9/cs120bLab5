/*	Author: lab
 *  Partner(s) Name: 
 *	Lab Section:
 *	Assignment: Lab #  Exercise #
 *	Exercise Description: [optional - include for your own benefit]
 *
 *	I acknowledge all content contained herein, excluding template or example
 *	code, is my own original work.
 */
#include <avr/io.h>
#ifdef _SIMULATE_
#include "simAVRHeader.h"
#endif

enum States {Start, off, one, two, three, four, five, six} state;
//unsigned char temp = ~PINA & 0x01;
void Tick() {
	unsigned char temp = ~PINA & 0x01;
	switch(state) {
		case Start:
			state = off;
			PORTC = 0;
			break;
		case off:
		       if(temp == 1) {
		       	  state = one;
	   		  PORTC = 0x01;
			}
     			break;
 		case one:
			if(temp == 1) {
				state = two;
				PORTC = 0x02;
			}
			break;
		case two:
			if(temp == 1) {
				state = three;
				PORTC = 0x04;
			}
			break;
		case three:
			if(temp == 1) {
				state = four;
				PORTC = 0x08;
			}
			break;
		case four:
			if(temp == 1) {
				state = five;
				PORTC = 0x40;
			}
			break;
		case five:
			if(temp == 1) {
				state = six;
				PORTC = 0x20;
			}
			break;
		case six:
			if(temp == 1) {
				state = off;
				PORTC = 0x00;
			}
			break;
	}			
}


int main(void) {
    /* Insert DDR and PORT initializations */
    DDRA = 0x00; PORTA = 0xFF;
    DDRC = 0xFF; PORTC = 0x00;

    /* Insert your solution below */
    state = Start;
    while (1) {
        Tick();
    }
    return 0;
}
